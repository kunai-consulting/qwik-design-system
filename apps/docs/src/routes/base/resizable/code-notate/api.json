{
  "resizable": [
    {
      "Resizable Handle": {
        "inheritsFrom": "button",
        "dataAttributes": [
          {
            "name": "data-orientation",
            "type": "\"horizontal\" | \"vertical\"",
            "comment": "The orientation of the handle"
          },
          {
            "name": "data-dragging",
            "type": "boolean",
            "comment": "Indicates whether the handle is being dragged"
          },
          {
            "name": "data-disabled",
            "type": "boolean",
            "comment": "Indicates whether the handle is disabled"
          }
        ]
      }
    },
    {
      "Resizable Content": {
        "inheritsFrom": "div",
        "types": [
          {
            "PublicContentProps": [
              {
                "comment": "Default width of the content (in pixels)",
                "prop": "width",
                "type": "number"
              },
              {
                "comment": "Default height of the content (in pixels)",
                "prop": "height",
                "type": "number"
              },
              {
                "comment": "Minimum width constraint (in pixels)",
                "prop": "minWidth",
                "type": "number"
              },
              {
                "comment": "Maximum width constraint (in pixels)",
                "prop": "maxWidth",
                "type": "number"
              },
              {
                "comment": "Minimum height constraint (in pixels)",
                "prop": "minHeight",
                "type": "number"
              },
              {
                "comment": "Maximum height constraint (in pixels)",
                "prop": "maxHeight",
                "type": "number"
              },
              {
                "comment": "Whether the content can be collapsed",
                "prop": "collapsible",
                "type": "boolean"
              },
              {
                "comment": "Initial collapsed state",
                "prop": "collapsed",
                "type": "boolean"
              },
              {
                "comment": "Width to collapse to (in pixels)",
                "prop": "collapsedSize",
                "type": "number"
              },
              {
                "comment": "Threshold for collapse trigger",
                "prop": "collapseThreshold",
                "type": "number"
              },
              {
                "comment": "Callback fired when the content is resized",
                "prop": "onResize$",
                "type": "QRL<(size: number) => void>"
              },
              {
                "comment": "Callback fired when the content is collapsed",
                "prop": "onCollapse$",
                "type": "QRL<() => void>"
              },
              {
                "comment": "Callback fired when the content is expanded",
                "prop": "onExpand$",
                "type": "QRL<() => void>"
              }
            ]
          }
        ],
        "dataAttributes": [
          {
            "name": "data-orientation",
            "type": "\"horizontal\" | \"vertical\"",
            "comment": "The orientation of the content"
          },
          {
            "name": "data-min-size",
            "type": "number",
            "comment": "Minimum size constraint for the content"
          },
          {
            "name": "data-max-size",
            "type": "number",
            "comment": "Maximum size constraint for the content"
          },
          {
            "name": "data-collapsible",
            "type": "boolean",
            "comment": "Indicates whether the content is collapsible"
          },
          {
            "name": "data-collapsed-size",
            "type": "number",
            "comment": "Size when content is collapsed"
          },
          {
            "name": "data-collapse-threshold",
            "type": "number",
            "comment": "Threshold for triggering collapse"
          },
          {
            "name": "data-is-collapsed",
            "type": "boolean",
            "comment": "Current collapsed state of the content"
          }
        ]
      }
    },
    {
      "Resizable Root": {
        "inheritsFrom": "div",
        "types": [
          {
            "PublicRootProps": [
              {
                "comment": "Direction in which the contents can be resized",
                "prop": "orientation",
                "type": "\"horizontal\" | \"vertical\""
              },
              {
                "comment": "When true, prevents resizing of contents",
                "prop": "disabled",
                "type": "boolean"
              },
              {
                "comment": "Key for persisting layout in localStorage",
                "prop": "storageKey",
                "type": "string"
              }
            ]
          }
        ],
        "dataAttributes": [
          {
            "name": "data-orientation",
            "type": "\"horizontal\" | \"vertical\"",
            "comment": "The orientation of the resizable container"
          },
          {
            "name": "data-disabled",
            "type": "boolean",
            "comment": "Indicates whether resizing is disabled"
          }
        ]
      }
    }
  ],
  "anatomy": [
    {
      "name": "Resizable.Root",
      "description": "Container component that manages the resizable layout and state"
    },
    {
      "name": "Resizable.Content",
      "description": "Individual content component that can be resized"
    },
    {
      "name": "Resizable.Handle",
      "description": "Interactive handle component for resizing adjacent contents"
    }
  ],
  "features": [
    "WAI ARIA Separator pattern implementation",
    "Keyboard navigation with arrow keys and Home/End",
    "Collapsible contents with custom thresholds",
    "Responsive resizing with min/max constraints",
    "Content size synchronization across handles",
    "Dynamic orientation (horizontal/vertical)",
    "Fine-grained resizing control with Shift key",
    "Progressive size adjustments with step values",
    "Custom collapse/expand behaviors with callbacks",
    "Flexible initial sizing with auto-distribution",
    "Accessible resize handles with ARIA attributes"
  ],
  "keyboardInteractions": {
    "shortcuts": [
      {
        "key": "ArrowLeft",
        "comment": "When focus is on the handle and orientation is horizontal, decreases size of previous content by 1%"
      },
      {
        "key": "ArrowRight",
        "comment": "When focus is on the handle and orientation is horizontal, increases size of previous content by 1%"
      },
      {
        "key": "ArrowUp",
        "comment": "When focus is on the handle and orientation is vertical, decreases size of previous content by 1%"
      },
      {
        "key": "ArrowDown",
        "comment": "When focus is on the handle and orientation is vertical, increases size of previous content by 1%"
      },
      {
        "key": "Shift + Arrow keys",
        "comment": "When focus is on the handle, adjusts content size by 10% instead of 1%"
      },
      {
        "key": "Home",
        "comment": "When focus is on the handle, collapses previous content to its minimum size"
      },
      {
        "key": "End",
        "comment": "When focus is on the handle, expands previous content to its maximum size"
      }
    ]
  }
}
